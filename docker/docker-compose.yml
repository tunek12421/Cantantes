services:
  # PostgreSQL - Base de datos principal
  postgres:
    image: postgres:15-alpine
    container_name: chat_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ../data/postgres:/var/lib/postgresql/data
      - ../logs/postgres:/var/log/postgresql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - chat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c log_destination='stderr'
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_filename='postgresql-%Y-%m-%d_%H%M%S.log'
      -c log_rotation_age=1d
      -c log_rotation_size=100MB

  # Redis/KeyDB - Cache y sesiones
  redis:
    image: eqalpha/keydb:alpine
    container_name: chat_redis
    restart: unless-stopped
    command: keydb-server /etc/keydb/keydb.conf --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis/redis.conf:/etc/keydb/keydb.conf
      - ../data/redis:/data
      - ../logs/redis:/var/log/keydb
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - chat_network
    healthcheck:
      test: ["CMD", "keydb-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - Object storage para media
  minio:
    image: minio/minio:latest
    container_name: chat_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
    volumes:
      - ../data/minio:/data
      - ../logs/minio:/var/log/minio
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    networks:
      - chat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # pgAdmin - Administración de PostgreSQL (opcional en producción)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chat_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ../data/pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - chat_network
    depends_on:
      - postgres
    profiles:
      - dev

networks:
  chat_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16